<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="886" onload="init(evt)" viewBox="0 0 1200 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="886" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="869.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="869.00"> </text><svg id="frames" x="10" width="1180" total_samples="72"><g><title>[[heap]] (1 samples, 1.39%)</title><rect x="0.0000%" y="805" width="1.3889%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="815.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="0.0000%" y="789" width="1.3889%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="799.50"></text></g><g><title>PyNumber_Multiply (1 samples, 1.39%)</title><rect x="1.3889%" y="789" width="1.3889%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="1.6389%" y="799.50"></text></g><g><title>_PyObject_GenericGetAttrWithDict (1 samples, 1.39%)</title><rect x="2.7778%" y="789" width="1.3889%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="3.0278%" y="799.50"></text></g><g><title>pyo3::pyclass_init::PyClassInitializer&lt;T&gt;::create_cell (1 samples, 1.39%)</title><rect x="4.1667%" y="789" width="1.3889%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="1"/><text x="4.4167%" y="799.50"></text></g><g><title>[anon] (4 samples, 5.56%)</title><rect x="1.3889%" y="805" width="5.5556%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="4"/><text x="1.6389%" y="815.50">[anon]</text></g><g><title>std::panicking::try (1 samples, 1.39%)</title><rect x="5.5556%" y="789" width="1.3889%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="1"/><text x="5.8056%" y="799.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="6.9444%" y="805" width="1.3889%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="1"/><text x="7.1944%" y="815.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="6.9444%" y="789" width="1.3889%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="1"/><text x="7.1944%" y="799.50"></text></g><g><title>[libpython3.10.so.1.0] (2 samples, 2.78%)</title><rect x="8.3333%" y="789" width="2.7778%" height="15" fill="rgb(220,122,19)" fg:x="6" fg:w="2"/><text x="8.5833%" y="799.50">[l..</text></g><g><title>PyObject_CallMethod (1 samples, 1.39%)</title><rect x="9.7222%" y="773" width="1.3889%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="1"/><text x="9.9722%" y="783.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="9.7222%" y="757" width="1.3889%" height="15" fill="rgb(240,193,28)" fg:x="7" fg:w="1"/><text x="9.9722%" y="767.50"></text></g><g><title>_PyFunction_Vectorcall (1 samples, 1.39%)</title><rect x="9.7222%" y="741" width="1.3889%" height="15" fill="rgb(216,20,37)" fg:x="7" fg:w="1"/><text x="9.9722%" y="751.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="9.7222%" y="725" width="1.3889%" height="15" fill="rgb(206,188,39)" fg:x="7" fg:w="1"/><text x="9.9722%" y="735.50"></text></g><g><title>PyImport_ImportModuleLevelObject (1 samples, 1.39%)</title><rect x="9.7222%" y="709" width="1.3889%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="1"/><text x="9.9722%" y="719.50"></text></g><g><title>_PyObject_CallMethodIdObjArgs (1 samples, 1.39%)</title><rect x="9.7222%" y="693" width="1.3889%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="1"/><text x="9.9722%" y="703.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="9.7222%" y="677" width="1.3889%" height="15" fill="rgb(225,20,46)" fg:x="7" fg:w="1"/><text x="9.9722%" y="687.50"></text></g><g><title>_PyFunction_Vectorcall (1 samples, 1.39%)</title><rect x="9.7222%" y="661" width="1.3889%" height="15" fill="rgb(210,31,41)" fg:x="7" fg:w="1"/><text x="9.9722%" y="671.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="9.7222%" y="645" width="1.3889%" height="15" fill="rgb(221,200,47)" fg:x="7" fg:w="1"/><text x="9.9722%" y="655.50"></text></g><g><title>_PyFunction_Vectorcall (1 samples, 1.39%)</title><rect x="9.7222%" y="629" width="1.3889%" height="15" fill="rgb(226,26,5)" fg:x="7" fg:w="1"/><text x="9.9722%" y="639.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="9.7222%" y="613" width="1.3889%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="1"/><text x="9.9722%" y="623.50"></text></g><g><title>_PyFunction_Vectorcall (1 samples, 1.39%)</title><rect x="9.7222%" y="597" width="1.3889%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="1"/><text x="9.9722%" y="607.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="9.7222%" y="581" width="1.3889%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="1"/><text x="9.9722%" y="591.50"></text></g><g><title>_PyFunction_Vectorcall (1 samples, 1.39%)</title><rect x="9.7222%" y="565" width="1.3889%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="1"/><text x="9.9722%" y="575.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="9.7222%" y="549" width="1.3889%" height="15" fill="rgb(241,131,45)" fg:x="7" fg:w="1"/><text x="9.9722%" y="559.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="9.7222%" y="533" width="1.3889%" height="15" fill="rgb(249,31,29)" fg:x="7" fg:w="1"/><text x="9.9722%" y="543.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="9.7222%" y="517" width="1.3889%" height="15" fill="rgb(225,111,53)" fg:x="7" fg:w="1"/><text x="9.9722%" y="527.50"></text></g><g><title>PyEval_EvalCode (1 samples, 1.39%)</title><rect x="9.7222%" y="501" width="1.3889%" height="15" fill="rgb(238,160,17)" fg:x="7" fg:w="1"/><text x="9.9722%" y="511.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="9.7222%" y="485" width="1.3889%" height="15" fill="rgb(214,148,48)" fg:x="7" fg:w="1"/><text x="9.9722%" y="495.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="9.7222%" y="469" width="1.3889%" height="15" fill="rgb(232,36,49)" fg:x="7" fg:w="1"/><text x="9.9722%" y="479.50"></text></g><g><title>PyImport_ImportModuleLevelObject (1 samples, 1.39%)</title><rect x="9.7222%" y="453" width="1.3889%" height="15" fill="rgb(209,103,24)" fg:x="7" fg:w="1"/><text x="9.9722%" y="463.50"></text></g><g><title>_PyObject_CallMethodIdObjArgs (1 samples, 1.39%)</title><rect x="9.7222%" y="437" width="1.3889%" height="15" fill="rgb(229,88,8)" fg:x="7" fg:w="1"/><text x="9.9722%" y="447.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="9.7222%" y="421" width="1.3889%" height="15" fill="rgb(213,181,19)" fg:x="7" fg:w="1"/><text x="9.9722%" y="431.50"></text></g><g><title>_PyFunction_Vectorcall (1 samples, 1.39%)</title><rect x="9.7222%" y="405" width="1.3889%" height="15" fill="rgb(254,191,54)" fg:x="7" fg:w="1"/><text x="9.9722%" y="415.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="9.7222%" y="389" width="1.3889%" height="15" fill="rgb(241,83,37)" fg:x="7" fg:w="1"/><text x="9.9722%" y="399.50"></text></g><g><title>_PyFunction_Vectorcall (1 samples, 1.39%)</title><rect x="9.7222%" y="373" width="1.3889%" height="15" fill="rgb(233,36,39)" fg:x="7" fg:w="1"/><text x="9.9722%" y="383.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="9.7222%" y="357" width="1.3889%" height="15" fill="rgb(226,3,54)" fg:x="7" fg:w="1"/><text x="9.9722%" y="367.50"></text></g><g><title>_PyFunction_Vectorcall (1 samples, 1.39%)</title><rect x="9.7222%" y="341" width="1.3889%" height="15" fill="rgb(245,192,40)" fg:x="7" fg:w="1"/><text x="9.9722%" y="351.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="9.7222%" y="325" width="1.3889%" height="15" fill="rgb(238,167,29)" fg:x="7" fg:w="1"/><text x="9.9722%" y="335.50"></text></g><g><title>_PyFunction_Vectorcall (1 samples, 1.39%)</title><rect x="9.7222%" y="309" width="1.3889%" height="15" fill="rgb(232,182,51)" fg:x="7" fg:w="1"/><text x="9.9722%" y="319.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="9.7222%" y="293" width="1.3889%" height="15" fill="rgb(231,60,39)" fg:x="7" fg:w="1"/><text x="9.9722%" y="303.50"></text></g><g><title>_PyFunction_Vectorcall (1 samples, 1.39%)</title><rect x="9.7222%" y="277" width="1.3889%" height="15" fill="rgb(208,69,12)" fg:x="7" fg:w="1"/><text x="9.9722%" y="287.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="9.7222%" y="261" width="1.3889%" height="15" fill="rgb(235,93,37)" fg:x="7" fg:w="1"/><text x="9.9722%" y="271.50"></text></g><g><title>_PyFunction_Vectorcall (1 samples, 1.39%)</title><rect x="9.7222%" y="245" width="1.3889%" height="15" fill="rgb(213,116,39)" fg:x="7" fg:w="1"/><text x="9.9722%" y="255.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="9.7222%" y="229" width="1.3889%" height="15" fill="rgb(222,207,29)" fg:x="7" fg:w="1"/><text x="9.9722%" y="239.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="9.7222%" y="213" width="1.3889%" height="15" fill="rgb(206,96,30)" fg:x="7" fg:w="1"/><text x="9.9722%" y="223.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="9.7222%" y="197" width="1.3889%" height="15" fill="rgb(218,138,4)" fg:x="7" fg:w="1"/><text x="9.9722%" y="207.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="9.7222%" y="181" width="1.3889%" height="15" fill="rgb(250,191,14)" fg:x="7" fg:w="1"/><text x="9.9722%" y="191.50"></text></g><g><title>PyInit__io (1 samples, 1.39%)</title><rect x="9.7222%" y="165" width="1.3889%" height="15" fill="rgb(239,60,40)" fg:x="7" fg:w="1"/><text x="9.9722%" y="175.50"></text></g><g><title>PyModule_AddType (1 samples, 1.39%)</title><rect x="9.7222%" y="149" width="1.3889%" height="15" fill="rgb(206,27,48)" fg:x="7" fg:w="1"/><text x="9.9722%" y="159.50"></text></g><g><title>PyType_Ready (1 samples, 1.39%)</title><rect x="9.7222%" y="133" width="1.3889%" height="15" fill="rgb(225,35,8)" fg:x="7" fg:w="1"/><text x="9.9722%" y="143.50"></text></g><g><title>PyDescr_NewGetSet (1 samples, 1.39%)</title><rect x="9.7222%" y="117" width="1.3889%" height="15" fill="rgb(250,213,24)" fg:x="7" fg:w="1"/><text x="9.9722%" y="127.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="9.7222%" y="101" width="1.3889%" height="15" fill="rgb(247,123,22)" fg:x="7" fg:w="1"/><text x="9.9722%" y="111.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="9.7222%" y="85" width="1.3889%" height="15" fill="rgb(231,138,38)" fg:x="7" fg:w="1"/><text x="9.9722%" y="95.50"></text></g><g><title>hikari::math::vec::&lt;impl pyo3::class::impl_::PyClassNewImpl&lt;hikari::math::vec::Vec3&gt; for pyo3::class::impl_::PyClassImplCollector&lt;hikari::math::vec::Vec3&gt;&gt;::new_impl::__wrap (1 samples, 1.39%)</title><rect x="11.1111%" y="789" width="1.3889%" height="15" fill="rgb(231,145,46)" fg:x="8" fg:w="1"/><text x="11.3611%" y="799.50"></text></g><g><title>hikari_py::main (1 samples, 1.39%)</title><rect x="12.5000%" y="789" width="1.3889%" height="15" fill="rgb(251,118,11)" fg:x="9" fg:w="1"/><text x="12.7500%" y="799.50"></text></g><g><title>pyo3::gil::prepare_freethreaded_python (1 samples, 1.39%)</title><rect x="12.5000%" y="773" width="1.3889%" height="15" fill="rgb(217,147,25)" fg:x="9" fg:w="1"/><text x="12.7500%" y="783.50"></text></g><g><title>parking_lot::once::Once::call_once_force (1 samples, 1.39%)</title><rect x="12.5000%" y="757" width="1.3889%" height="15" fill="rgb(247,81,37)" fg:x="9" fg:w="1"/><text x="12.7500%" y="767.50"></text></g><g><title>parking_lot::once::Once::call_once_slow (1 samples, 1.39%)</title><rect x="12.5000%" y="741" width="1.3889%" height="15" fill="rgb(209,12,38)" fg:x="9" fg:w="1"/><text x="12.7500%" y="751.50"></text></g><g><title>parking_lot::once::Once::call_once_force::{{closure}} (1 samples, 1.39%)</title><rect x="12.5000%" y="725" width="1.3889%" height="15" fill="rgb(227,1,9)" fg:x="9" fg:w="1"/><text x="12.7500%" y="735.50"></text></g><g><title>pyo3::gil::prepare_freethreaded_python::{{closure}} (1 samples, 1.39%)</title><rect x="12.5000%" y="709" width="1.3889%" height="15" fill="rgb(248,47,43)" fg:x="9" fg:w="1"/><text x="12.7500%" y="719.50"></text></g><g><title>Py_InitializeEx (1 samples, 1.39%)</title><rect x="12.5000%" y="693" width="1.3889%" height="15" fill="rgb(221,10,30)" fg:x="9" fg:w="1"/><text x="12.7500%" y="703.50"></text></g><g><title>Py_InitializeFromConfig (1 samples, 1.39%)</title><rect x="12.5000%" y="677" width="1.3889%" height="15" fill="rgb(210,229,1)" fg:x="9" fg:w="1"/><text x="12.7500%" y="687.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="12.5000%" y="661" width="1.3889%" height="15" fill="rgb(222,148,37)" fg:x="9" fg:w="1"/><text x="12.7500%" y="671.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="12.5000%" y="645" width="1.3889%" height="15" fill="rgb(234,67,33)" fg:x="9" fg:w="1"/><text x="12.7500%" y="655.50"></text></g><g><title>PyImport_ImportModule (1 samples, 1.39%)</title><rect x="12.5000%" y="629" width="1.3889%" height="15" fill="rgb(247,98,35)" fg:x="9" fg:w="1"/><text x="12.7500%" y="639.50"></text></g><g><title>PyImport_Import (1 samples, 1.39%)</title><rect x="12.5000%" y="613" width="1.3889%" height="15" fill="rgb(247,138,52)" fg:x="9" fg:w="1"/><text x="12.7500%" y="623.50"></text></g><g><title>PyObject_CallFunction (1 samples, 1.39%)</title><rect x="12.5000%" y="597" width="1.3889%" height="15" fill="rgb(213,79,30)" fg:x="9" fg:w="1"/><text x="12.7500%" y="607.50"></text></g><g><title>_PyObject_MakeTpCall (1 samples, 1.39%)</title><rect x="12.5000%" y="581" width="1.3889%" height="15" fill="rgb(246,177,23)" fg:x="9" fg:w="1"/><text x="12.7500%" y="591.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="12.5000%" y="565" width="1.3889%" height="15" fill="rgb(230,62,27)" fg:x="9" fg:w="1"/><text x="12.7500%" y="575.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="12.5000%" y="549" width="1.3889%" height="15" fill="rgb(216,154,8)" fg:x="9" fg:w="1"/><text x="12.7500%" y="559.50"></text></g><g><title>PyImport_ImportModuleLevelObject (1 samples, 1.39%)</title><rect x="12.5000%" y="533" width="1.3889%" height="15" fill="rgb(244,35,45)" fg:x="9" fg:w="1"/><text x="12.7500%" y="543.50"></text></g><g><title>_PyObject_CallMethodIdObjArgs (1 samples, 1.39%)</title><rect x="12.5000%" y="517" width="1.3889%" height="15" fill="rgb(251,115,12)" fg:x="9" fg:w="1"/><text x="12.7500%" y="527.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="12.5000%" y="501" width="1.3889%" height="15" fill="rgb(240,54,50)" fg:x="9" fg:w="1"/><text x="12.7500%" y="511.50"></text></g><g><title>_PyFunction_Vectorcall (1 samples, 1.39%)</title><rect x="12.5000%" y="485" width="1.3889%" height="15" fill="rgb(233,84,52)" fg:x="9" fg:w="1"/><text x="12.7500%" y="495.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="12.5000%" y="469" width="1.3889%" height="15" fill="rgb(207,117,47)" fg:x="9" fg:w="1"/><text x="12.7500%" y="479.50"></text></g><g><title>_PyFunction_Vectorcall (1 samples, 1.39%)</title><rect x="12.5000%" y="453" width="1.3889%" height="15" fill="rgb(249,43,39)" fg:x="9" fg:w="1"/><text x="12.7500%" y="463.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="12.5000%" y="437" width="1.3889%" height="15" fill="rgb(209,38,44)" fg:x="9" fg:w="1"/><text x="12.7500%" y="447.50"></text></g><g><title>_PyFunction_Vectorcall (1 samples, 1.39%)</title><rect x="12.5000%" y="421" width="1.3889%" height="15" fill="rgb(236,212,23)" fg:x="9" fg:w="1"/><text x="12.7500%" y="431.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="12.5000%" y="405" width="1.3889%" height="15" fill="rgb(242,79,21)" fg:x="9" fg:w="1"/><text x="12.7500%" y="415.50"></text></g><g><title>_PyFunction_Vectorcall (1 samples, 1.39%)</title><rect x="12.5000%" y="389" width="1.3889%" height="15" fill="rgb(211,96,35)" fg:x="9" fg:w="1"/><text x="12.7500%" y="399.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="12.5000%" y="373" width="1.3889%" height="15" fill="rgb(253,215,40)" fg:x="9" fg:w="1"/><text x="12.7500%" y="383.50"></text></g><g><title>_PyFunction_Vectorcall (1 samples, 1.39%)</title><rect x="12.5000%" y="357" width="1.3889%" height="15" fill="rgb(211,81,21)" fg:x="9" fg:w="1"/><text x="12.7500%" y="367.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="12.5000%" y="341" width="1.3889%" height="15" fill="rgb(208,190,38)" fg:x="9" fg:w="1"/><text x="12.7500%" y="351.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="12.5000%" y="325" width="1.3889%" height="15" fill="rgb(235,213,38)" fg:x="9" fg:w="1"/><text x="12.7500%" y="335.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="12.5000%" y="309" width="1.3889%" height="15" fill="rgb(237,122,38)" fg:x="9" fg:w="1"/><text x="12.7500%" y="319.50"></text></g><g><title>PyEval_EvalCode (1 samples, 1.39%)</title><rect x="12.5000%" y="293" width="1.3889%" height="15" fill="rgb(244,218,35)" fg:x="9" fg:w="1"/><text x="12.7500%" y="303.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="12.5000%" y="277" width="1.3889%" height="15" fill="rgb(240,68,47)" fg:x="9" fg:w="1"/><text x="12.7500%" y="287.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="12.5000%" y="261" width="1.3889%" height="15" fill="rgb(210,16,53)" fg:x="9" fg:w="1"/><text x="12.7500%" y="271.50"></text></g><g><title>PyImport_ImportModuleLevelObject (1 samples, 1.39%)</title><rect x="12.5000%" y="245" width="1.3889%" height="15" fill="rgb(235,124,12)" fg:x="9" fg:w="1"/><text x="12.7500%" y="255.50"></text></g><g><title>_PyObject_CallMethodIdObjArgs (1 samples, 1.39%)</title><rect x="12.5000%" y="229" width="1.3889%" height="15" fill="rgb(224,169,11)" fg:x="9" fg:w="1"/><text x="12.7500%" y="239.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="12.5000%" y="213" width="1.3889%" height="15" fill="rgb(250,166,2)" fg:x="9" fg:w="1"/><text x="12.7500%" y="223.50"></text></g><g><title>_PyFunction_Vectorcall (1 samples, 1.39%)</title><rect x="12.5000%" y="197" width="1.3889%" height="15" fill="rgb(242,216,29)" fg:x="9" fg:w="1"/><text x="12.7500%" y="207.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="12.5000%" y="181" width="1.3889%" height="15" fill="rgb(230,116,27)" fg:x="9" fg:w="1"/><text x="12.7500%" y="191.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="12.5000%" y="165" width="1.3889%" height="15" fill="rgb(228,99,48)" fg:x="9" fg:w="1"/><text x="12.7500%" y="175.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="12.5000%" y="149" width="1.3889%" height="15" fill="rgb(253,11,6)" fg:x="9" fg:w="1"/><text x="12.7500%" y="159.50"></text></g><g><title>_PyFunction_Vectorcall (1 samples, 1.39%)</title><rect x="12.5000%" y="133" width="1.3889%" height="15" fill="rgb(247,143,39)" fg:x="9" fg:w="1"/><text x="12.7500%" y="143.50"></text></g><g><title>_PyEval_EvalFrameDefault (1 samples, 1.39%)</title><rect x="12.5000%" y="117" width="1.3889%" height="15" fill="rgb(236,97,10)" fg:x="9" fg:w="1"/><text x="12.7500%" y="127.50"></text></g><g><title>_PyObject_GetMethod (1 samples, 1.39%)</title><rect x="12.5000%" y="101" width="1.3889%" height="15" fill="rgb(233,208,19)" fg:x="9" fg:w="1"/><text x="12.7500%" y="111.50"></text></g><g><title>PyObject_GetAttr (1 samples, 1.39%)</title><rect x="12.5000%" y="85" width="1.3889%" height="15" fill="rgb(216,164,2)" fg:x="9" fg:w="1"/><text x="12.7500%" y="95.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="12.5000%" y="69" width="1.3889%" height="15" fill="rgb(220,129,5)" fg:x="9" fg:w="1"/><text x="12.7500%" y="79.50"></text></g><g><title>_PyObject_GenericGetAttrWithDict (1 samples, 1.39%)</title><rect x="12.5000%" y="53" width="1.3889%" height="15" fill="rgb(242,17,10)" fg:x="9" fg:w="1"/><text x="12.7500%" y="63.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="12.5000%" y="37" width="1.3889%" height="15" fill="rgb(242,107,0)" fg:x="9" fg:w="1"/><text x="12.7500%" y="47.50"></text></g><g><title>pyo3::class::impl_::tp_dealloc (1 samples, 1.39%)</title><rect x="13.8889%" y="789" width="1.3889%" height="15" fill="rgb(251,28,31)" fg:x="10" fg:w="1"/><text x="14.1389%" y="799.50"></text></g><g><title>[unknown] (6 samples, 8.33%)</title><rect x="8.3333%" y="805" width="8.3333%" height="15" fill="rgb(233,223,10)" fg:x="6" fg:w="6"/><text x="8.5833%" y="815.50">[unknown]</text></g><g><title>pyo3::types::any::PyAny::call1 (1 samples, 1.39%)</title><rect x="15.2778%" y="789" width="1.3889%" height="15" fill="rgb(215,21,27)" fg:x="11" fg:w="1"/><text x="15.5278%" y="799.50"></text></g><g><title>pyo3::types::any::PyAny::call (1 samples, 1.39%)</title><rect x="15.2778%" y="773" width="1.3889%" height="15" fill="rgb(232,23,21)" fg:x="11" fg:w="1"/><text x="15.5278%" y="783.50"></text></g><g><title>pyo3::types::tuple::&lt;impl pyo3::conversion::IntoPy&lt;pyo3::instance::Py&lt;pyo3::types::tuple::PyTuple&gt;&gt; for (T0,T1)&gt;::into_py (1 samples, 1.39%)</title><rect x="15.2778%" y="757" width="1.3889%" height="15" fill="rgb(244,5,23)" fg:x="11" fg:w="1"/><text x="15.5278%" y="767.50"></text></g><g><title>pyo3::types::floatob::&lt;impl pyo3::conversion::IntoPy&lt;pyo3::instance::Py&lt;pyo3::types::any::PyAny&gt;&gt; for f32&gt;::into_py (1 samples, 1.39%)</title><rect x="15.2778%" y="741" width="1.3889%" height="15" fill="rgb(226,81,46)" fg:x="11" fg:w="1"/><text x="15.5278%" y="751.50"></text></g><g><title>pyo3::types::floatob::PyFloat::new (1 samples, 1.39%)</title><rect x="15.2778%" y="725" width="1.3889%" height="15" fill="rgb(247,70,30)" fg:x="11" fg:w="1"/><text x="15.5278%" y="735.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.39%)</title><rect x="23.6111%" y="709" width="1.3889%" height="15" fill="rgb(212,68,19)" fg:x="17" fg:w="1"/><text x="23.8611%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;pyo3::gil::GILGuard&gt; (4 samples, 5.56%)</title><rect x="25.0000%" y="709" width="5.5556%" height="15" fill="rgb(240,187,13)" fg:x="18" fg:w="4"/><text x="25.2500%" y="719.50">core::p..</text></g><g><title>&lt;pyo3::gil::GILGuard as core::ops::drop::Drop&gt;::drop (4 samples, 5.56%)</title><rect x="25.0000%" y="693" width="5.5556%" height="15" fill="rgb(223,113,26)" fg:x="18" fg:w="4"/><text x="25.2500%" y="703.50">&lt;pyo3::..</text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::drop (4 samples, 5.56%)</title><rect x="25.0000%" y="677" width="5.5556%" height="15" fill="rgb(206,192,2)" fg:x="18" fg:w="4"/><text x="25.2500%" y="687.50">core::m..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;pyo3::gil::GILPool&gt;&gt; (4 samples, 5.56%)</title><rect x="25.0000%" y="661" width="5.5556%" height="15" fill="rgb(241,108,4)" fg:x="18" fg:w="4"/><text x="25.2500%" y="671.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;pyo3::gil::GILPool&gt; (4 samples, 5.56%)</title><rect x="25.0000%" y="645" width="5.5556%" height="15" fill="rgb(247,173,49)" fg:x="18" fg:w="4"/><text x="25.2500%" y="655.50">core::p..</text></g><g><title>&lt;pyo3::gil::GILPool as core::ops::drop::Drop&gt;::drop (4 samples, 5.56%)</title><rect x="25.0000%" y="629" width="5.5556%" height="15" fill="rgb(224,114,35)" fg:x="18" fg:w="4"/><text x="25.2500%" y="639.50">&lt;pyo3::..</text></g><g><title>pyo3::ffi::object::Py_DECREF (4 samples, 5.56%)</title><rect x="25.0000%" y="613" width="5.5556%" height="15" fill="rgb(245,159,27)" fg:x="18" fg:w="4"/><text x="25.2500%" y="623.50">pyo3::f..</text></g><g><title>[libpython3.10.so.1.0] (4 samples, 5.56%)</title><rect x="25.0000%" y="597" width="5.5556%" height="15" fill="rgb(245,172,44)" fg:x="18" fg:w="4"/><text x="25.2500%" y="607.50">[libpyt..</text></g><g><title>[libpython3.10.so.1.0] (4 samples, 5.56%)</title><rect x="25.0000%" y="581" width="5.5556%" height="15" fill="rgb(236,23,11)" fg:x="18" fg:w="4"/><text x="25.2500%" y="591.50">[libpyt..</text></g><g><title>PyObject_GC_Del (1 samples, 1.39%)</title><rect x="29.1667%" y="565" width="1.3889%" height="15" fill="rgb(205,117,38)" fg:x="21" fg:w="1"/><text x="29.4167%" y="575.50"></text></g><g><title>&lt;() as pyo3::conversion::IntoPy&lt;pyo3::instance::Py&lt;pyo3::types::tuple::PyTuple&gt;&gt;&gt;::into_py (1 samples, 1.39%)</title><rect x="30.5556%" y="661" width="1.3889%" height="15" fill="rgb(237,72,25)" fg:x="22" fg:w="1"/><text x="30.8056%" y="671.50"></text></g><g><title>pyo3::types::tuple::PyTuple::empty (1 samples, 1.39%)</title><rect x="30.5556%" y="645" width="1.3889%" height="15" fill="rgb(244,70,9)" fg:x="22" fg:w="1"/><text x="30.8056%" y="655.50"></text></g><g><title>PyTuple_New (1 samples, 1.39%)</title><rect x="30.5556%" y="629" width="1.3889%" height="15" fill="rgb(217,125,39)" fg:x="22" fg:w="1"/><text x="30.8056%" y="639.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="31.9444%" y="645" width="1.3889%" height="15" fill="rgb(235,36,10)" fg:x="23" fg:w="1"/><text x="32.1944%" y="655.50"></text></g><g><title>PyNumber_InPlaceAdd (2 samples, 2.78%)</title><rect x="37.5000%" y="629" width="2.7778%" height="15" fill="rgb(251,123,47)" fg:x="27" fg:w="2"/><text x="37.7500%" y="639.50">Py..</text></g><g><title>hikari::math::vec::__init2338691472845809179::__wrap (2 samples, 2.78%)</title><rect x="37.5000%" y="613" width="2.7778%" height="15" fill="rgb(221,13,13)" fg:x="27" fg:w="2"/><text x="37.7500%" y="623.50">hi..</text></g><g><title>std::panicking::try (2 samples, 2.78%)</title><rect x="37.5000%" y="597" width="2.7778%" height="15" fill="rgb(238,131,9)" fg:x="27" fg:w="2"/><text x="37.7500%" y="607.50">st..</text></g><g><title>hikari::math::vec::__init2338691472845809179::__wrap::_{{closure}} (2 samples, 2.78%)</title><rect x="37.5000%" y="581" width="2.7778%" height="15" fill="rgb(211,50,8)" fg:x="27" fg:w="2"/><text x="37.7500%" y="591.50">hi..</text></g><g><title>hikari::math::vec::Vec3::to_vec (2 samples, 2.78%)</title><rect x="37.5000%" y="565" width="2.7778%" height="15" fill="rgb(245,182,24)" fg:x="27" fg:w="2"/><text x="37.7500%" y="575.50">hi..</text></g><g><title>&lt;pyo3::types::floatob::PyFloat as pyo3::type_object::PyTypeInfo&gt;::is_type_of (2 samples, 2.78%)</title><rect x="37.5000%" y="549" width="2.7778%" height="15" fill="rgb(242,14,37)" fg:x="27" fg:w="2"/><text x="37.7500%" y="559.50">&lt;p..</text></g><g><title>PyType_IsSubtype (1 samples, 1.39%)</title><rect x="38.8889%" y="533" width="1.3889%" height="15" fill="rgb(246,228,12)" fg:x="28" fg:w="1"/><text x="39.1389%" y="543.50"></text></g><g><title>pyo3::gil::ReferencePool::update_counts (1 samples, 1.39%)</title><rect x="41.6667%" y="597" width="1.3889%" height="15" fill="rgb(213,55,15)" fg:x="30" fg:w="1"/><text x="41.9167%" y="607.50"></text></g><g><title>PyNumber_Multiply (4 samples, 5.56%)</title><rect x="40.2778%" y="629" width="5.5556%" height="15" fill="rgb(209,9,3)" fg:x="29" fg:w="4"/><text x="40.5278%" y="639.50">PyNumbe..</text></g><g><title>hikari::math::vec::__init2338691472845809179::__wrap (4 samples, 5.56%)</title><rect x="40.2778%" y="613" width="5.5556%" height="15" fill="rgb(230,59,30)" fg:x="29" fg:w="4"/><text x="40.5278%" y="623.50">hikari:..</text></g><g><title>std::panicking::try (2 samples, 2.78%)</title><rect x="43.0556%" y="597" width="2.7778%" height="15" fill="rgb(209,121,21)" fg:x="31" fg:w="2"/><text x="43.3056%" y="607.50">st..</text></g><g><title>pyo3::pyclass_init::PyClassInitializer&lt;T&gt;::create_cell (1 samples, 1.39%)</title><rect x="44.4444%" y="581" width="1.3889%" height="15" fill="rgb(220,109,13)" fg:x="32" fg:w="1"/><text x="44.6944%" y="591.50"></text></g><g><title>PyType_GenericAlloc (1 samples, 1.39%)</title><rect x="44.4444%" y="565" width="1.3889%" height="15" fill="rgb(232,18,1)" fg:x="32" fg:w="1"/><text x="44.6944%" y="575.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 1.39%)</title><rect x="44.4444%" y="549" width="1.3889%" height="15" fill="rgb(215,41,42)" fg:x="32" fg:w="1"/><text x="44.6944%" y="559.50"></text></g><g><title>PyObject_GetAttr (1 samples, 1.39%)</title><rect x="45.8333%" y="629" width="1.3889%" height="15" fill="rgb(224,123,36)" fg:x="33" fg:w="1"/><text x="46.0833%" y="639.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="45.8333%" y="613" width="1.3889%" height="15" fill="rgb(240,125,3)" fg:x="33" fg:w="1"/><text x="46.0833%" y="623.50"></text></g><g><title>&lt;pyo3::gil::GILPool as core::ops::drop::Drop&gt;::drop (1 samples, 1.39%)</title><rect x="47.2222%" y="613" width="1.3889%" height="15" fill="rgb(205,98,50)" fg:x="34" fg:w="1"/><text x="47.4722%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 1.39%)</title><rect x="47.2222%" y="597" width="1.3889%" height="15" fill="rgb(205,185,37)" fg:x="34" fg:w="1"/><text x="47.4722%" y="607.50"></text></g><g><title>pyo3::gil::OWNED_OBJECTS::__getit (1 samples, 1.39%)</title><rect x="47.2222%" y="581" width="1.3889%" height="15" fill="rgb(238,207,15)" fg:x="34" fg:w="1"/><text x="47.4722%" y="591.50"></text></g><g><title>__tls_get_addr@plt (1 samples, 1.39%)</title><rect x="47.2222%" y="565" width="1.3889%" height="15" fill="rgb(213,199,42)" fg:x="34" fg:w="1"/><text x="47.4722%" y="575.50"></text></g><g><title>hikari_py::execute_script (14 samples, 19.44%)</title><rect x="30.5556%" y="709" width="19.4444%" height="15" fill="rgb(235,201,11)" fg:x="22" fg:w="14"/><text x="30.8056%" y="719.50">hikari_py::execute_script</text></g><g><title>pyo3::instance::Py&lt;T&gt;::call0 (14 samples, 19.44%)</title><rect x="30.5556%" y="693" width="19.4444%" height="15" fill="rgb(207,46,11)" fg:x="22" fg:w="14"/><text x="30.8056%" y="703.50">pyo3::instance::Py&lt;T&gt;::call0</text></g><g><title>pyo3::instance::Py&lt;T&gt;::call (14 samples, 19.44%)</title><rect x="30.5556%" y="677" width="19.4444%" height="15" fill="rgb(241,35,35)" fg:x="22" fg:w="14"/><text x="30.8056%" y="687.50">pyo3::instance::Py&lt;T&gt;::call</text></g><g><title>[libpython3.10.so.1.0] (13 samples, 18.06%)</title><rect x="31.9444%" y="661" width="18.0556%" height="15" fill="rgb(243,32,47)" fg:x="23" fg:w="13"/><text x="32.1944%" y="671.50">[libpython3.10.so.1.0]</text></g><g><title>_PyEval_EvalFrameDefault (12 samples, 16.67%)</title><rect x="33.3333%" y="645" width="16.6667%" height="15" fill="rgb(247,202,23)" fg:x="24" fg:w="12"/><text x="33.5833%" y="655.50">_PyEval_EvalFrameDefault</text></g><g><title>pyo3::class::impl_::tp_dealloc (2 samples, 2.78%)</title><rect x="47.2222%" y="629" width="2.7778%" height="15" fill="rgb(219,102,11)" fg:x="34" fg:w="2"/><text x="47.4722%" y="639.50">py..</text></g><g><title>pyo3::gil::ReferencePool::update_counts (1 samples, 1.39%)</title><rect x="48.6111%" y="613" width="1.3889%" height="15" fill="rgb(243,110,44)" fg:x="35" fg:w="1"/><text x="48.8611%" y="623.50"></text></g><g><title>pyo3::gil::prepare_freethreaded_python (1 samples, 1.39%)</title><rect x="50.0000%" y="709" width="1.3889%" height="15" fill="rgb(222,74,54)" fg:x="36" fg:w="1"/><text x="50.2500%" y="719.50"></text></g><g><title>parking_lot::once::Once::call_once_force (1 samples, 1.39%)</title><rect x="50.0000%" y="693" width="1.3889%" height="15" fill="rgb(216,99,12)" fg:x="36" fg:w="1"/><text x="50.2500%" y="703.50"></text></g><g><title>parking_lot::once::Once::call_once_slow (1 samples, 1.39%)</title><rect x="50.0000%" y="677" width="1.3889%" height="15" fill="rgb(226,22,26)" fg:x="36" fg:w="1"/><text x="50.2500%" y="687.50"></text></g><g><title>parking_lot::once::Once::call_once_force::{{closure}} (1 samples, 1.39%)</title><rect x="50.0000%" y="661" width="1.3889%" height="15" fill="rgb(217,163,10)" fg:x="36" fg:w="1"/><text x="50.2500%" y="671.50"></text></g><g><title>pyo3::gil::prepare_freethreaded_python::{{closure}} (1 samples, 1.39%)</title><rect x="50.0000%" y="645" width="1.3889%" height="15" fill="rgb(213,25,53)" fg:x="36" fg:w="1"/><text x="50.2500%" y="655.50"></text></g><g><title>Py_InitializeEx (1 samples, 1.39%)</title><rect x="50.0000%" y="629" width="1.3889%" height="15" fill="rgb(252,105,26)" fg:x="36" fg:w="1"/><text x="50.2500%" y="639.50"></text></g><g><title>Py_InitializeFromConfig (1 samples, 1.39%)</title><rect x="50.0000%" y="613" width="1.3889%" height="15" fill="rgb(220,39,43)" fg:x="36" fg:w="1"/><text x="50.2500%" y="623.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="50.0000%" y="597" width="1.3889%" height="15" fill="rgb(229,68,48)" fg:x="36" fg:w="1"/><text x="50.2500%" y="607.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="50.0000%" y="581" width="1.3889%" height="15" fill="rgb(252,8,32)" fg:x="36" fg:w="1"/><text x="50.2500%" y="591.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="50.0000%" y="565" width="1.3889%" height="15" fill="rgb(223,20,43)" fg:x="36" fg:w="1"/><text x="50.2500%" y="575.50"></text></g><g><title>Py_DecodeLocale (1 samples, 1.39%)</title><rect x="50.0000%" y="549" width="1.3889%" height="15" fill="rgb(229,81,49)" fg:x="36" fg:w="1"/><text x="50.2500%" y="559.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="50.0000%" y="533" width="1.3889%" height="15" fill="rgb(236,28,36)" fg:x="36" fg:w="1"/><text x="50.2500%" y="543.50"></text></g><g><title>mbstowcs (1 samples, 1.39%)</title><rect x="50.0000%" y="517" width="1.3889%" height="15" fill="rgb(249,185,26)" fg:x="36" fg:w="1"/><text x="50.2500%" y="527.50"></text></g><g><title>__mbsrtowcs_l (1 samples, 1.39%)</title><rect x="50.0000%" y="501" width="1.3889%" height="15" fill="rgb(249,174,33)" fg:x="36" fg:w="1"/><text x="50.2500%" y="511.50"></text></g><g><title>__wcsmbs_load_conv (1 samples, 1.39%)</title><rect x="50.0000%" y="485" width="1.3889%" height="15" fill="rgb(233,201,37)" fg:x="36" fg:w="1"/><text x="50.2500%" y="495.50"></text></g><g><title>__gconv_find_transform (1 samples, 1.39%)</title><rect x="50.0000%" y="469" width="1.3889%" height="15" fill="rgb(221,78,26)" fg:x="36" fg:w="1"/><text x="50.2500%" y="479.50"></text></g><g><title>__pthread_once_slow (1 samples, 1.39%)</title><rect x="50.0000%" y="453" width="1.3889%" height="15" fill="rgb(250,127,30)" fg:x="36" fg:w="1"/><text x="50.2500%" y="463.50"></text></g><g><title>__gconv_read_conf (1 samples, 1.39%)</title><rect x="50.0000%" y="437" width="1.3889%" height="15" fill="rgb(230,49,44)" fg:x="36" fg:w="1"/><text x="50.2500%" y="447.50"></text></g><g><title>PyType_GenericAlloc (3 samples, 4.17%)</title><rect x="51.3889%" y="645" width="4.1667%" height="15" fill="rgb(229,67,23)" fg:x="37" fg:w="3"/><text x="51.6389%" y="655.50">PyTyp..</text></g><g><title>[libpython3.10.so.1.0] (3 samples, 4.17%)</title><rect x="51.3889%" y="629" width="4.1667%" height="15" fill="rgb(249,83,47)" fg:x="37" fg:w="3"/><text x="51.6389%" y="639.50">[libp..</text></g><g><title>[libpython3.10.so.1.0] (2 samples, 2.78%)</title><rect x="52.7778%" y="613" width="2.7778%" height="15" fill="rgb(215,43,3)" fg:x="38" fg:w="2"/><text x="53.0278%" y="623.50">[l..</text></g><g><title>[libpython3.10.so.1.0] (2 samples, 2.78%)</title><rect x="52.7778%" y="597" width="2.7778%" height="15" fill="rgb(238,154,13)" fg:x="38" fg:w="2"/><text x="53.0278%" y="607.50">[l..</text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="54.1667%" y="581" width="1.3889%" height="15" fill="rgb(219,56,2)" fg:x="39" fg:w="1"/><text x="54.4167%" y="591.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="54.1667%" y="565" width="1.3889%" height="15" fill="rgb(233,0,4)" fg:x="39" fg:w="1"/><text x="54.4167%" y="575.50"></text></g><g><title>PyMem_Malloc (1 samples, 1.39%)</title><rect x="59.7222%" y="565" width="1.3889%" height="15" fill="rgb(235,30,7)" fg:x="43" fg:w="1"/><text x="59.9722%" y="575.50"></text></g><g><title>PyObject_SetAttr (4 samples, 5.56%)</title><rect x="59.7222%" y="597" width="5.5556%" height="15" fill="rgb(250,79,13)" fg:x="43" fg:w="4"/><text x="59.9722%" y="607.50">PyObjec..</text></g><g><title>_PyObject_GenericSetAttrWithDict (4 samples, 5.56%)</title><rect x="59.7222%" y="581" width="5.5556%" height="15" fill="rgb(211,146,34)" fg:x="43" fg:w="4"/><text x="59.9722%" y="591.50">_PyObje..</text></g><g><title>[libpython3.10.so.1.0] (3 samples, 4.17%)</title><rect x="61.1111%" y="565" width="4.1667%" height="15" fill="rgb(228,22,38)" fg:x="44" fg:w="3"/><text x="61.3611%" y="575.50">[libp..</text></g><g><title>_PyObject_GC_New (3 samples, 4.17%)</title><rect x="61.1111%" y="549" width="4.1667%" height="15" fill="rgb(235,168,5)" fg:x="44" fg:w="3"/><text x="61.3611%" y="559.50">_PyOb..</text></g><g><title>[libpython3.10.so.1.0] (2 samples, 2.78%)</title><rect x="62.5000%" y="533" width="2.7778%" height="15" fill="rgb(221,155,16)" fg:x="45" fg:w="2"/><text x="62.7500%" y="543.50">[l..</text></g><g><title>[libpython3.10.so.1.0] (2 samples, 2.78%)</title><rect x="62.5000%" y="517" width="2.7778%" height="15" fill="rgb(215,215,53)" fg:x="45" fg:w="2"/><text x="62.7500%" y="527.50">[l..</text></g><g><title>[libpython3.10.so.1.0] (2 samples, 2.78%)</title><rect x="62.5000%" y="501" width="2.7778%" height="15" fill="rgb(223,4,10)" fg:x="45" fg:w="2"/><text x="62.7500%" y="511.50">[l..</text></g><g><title>[libpython3.10.so.1.0] (2 samples, 2.78%)</title><rect x="62.5000%" y="485" width="2.7778%" height="15" fill="rgb(234,103,6)" fg:x="45" fg:w="2"/><text x="62.7500%" y="495.50">[l..</text></g><g><title>PyObject_Call (12 samples, 16.67%)</title><rect x="51.3889%" y="677" width="16.6667%" height="15" fill="rgb(227,97,0)" fg:x="37" fg:w="12"/><text x="51.6389%" y="687.50">PyObject_Call</text></g><g><title>[libpython3.10.so.1.0] (12 samples, 16.67%)</title><rect x="51.3889%" y="661" width="16.6667%" height="15" fill="rgb(234,150,53)" fg:x="37" fg:w="12"/><text x="51.6389%" y="671.50">[libpython3.10.so.1.0]</text></g><g><title>[libpython3.10.so.1.0] (9 samples, 12.50%)</title><rect x="55.5556%" y="645" width="12.5000%" height="15" fill="rgb(228,201,54)" fg:x="40" fg:w="9"/><text x="55.8056%" y="655.50">[libpython3.10.so.1..</text></g><g><title>_PyObject_FastCallDictTstate (9 samples, 12.50%)</title><rect x="55.5556%" y="629" width="12.5000%" height="15" fill="rgb(222,22,37)" fg:x="40" fg:w="9"/><text x="55.8056%" y="639.50">_PyObject_FastCallD..</text></g><g><title>_PyEval_EvalFrameDefault (9 samples, 12.50%)</title><rect x="55.5556%" y="613" width="12.5000%" height="15" fill="rgb(237,53,32)" fg:x="40" fg:w="9"/><text x="55.8056%" y="623.50">_PyEval_EvalFrameDe..</text></g><g><title>_PyObject_MakeTpCall (2 samples, 2.78%)</title><rect x="65.2778%" y="597" width="2.7778%" height="15" fill="rgb(233,25,53)" fg:x="47" fg:w="2"/><text x="65.5278%" y="607.50">_P..</text></g><g><title>hikari::math::vec::&lt;impl pyo3::class::impl_::PyClassNewImpl&lt;hikari::math::vec::Vec3&gt; for pyo3::class::impl_::PyClassImplCollector&lt;hikari::math::vec::Vec3&gt;&gt;::new_impl::__wrap (2 samples, 2.78%)</title><rect x="65.2778%" y="581" width="2.7778%" height="15" fill="rgb(210,40,34)" fg:x="47" fg:w="2"/><text x="65.5278%" y="591.50">hi..</text></g><g><title>std::panicking::try (2 samples, 2.78%)</title><rect x="65.2778%" y="565" width="2.7778%" height="15" fill="rgb(241,220,44)" fg:x="47" fg:w="2"/><text x="65.5278%" y="575.50">st..</text></g><g><title>PyTuple_New (1 samples, 1.39%)</title><rect x="68.0556%" y="661" width="1.3889%" height="15" fill="rgb(235,28,35)" fg:x="49" fg:w="1"/><text x="68.3056%" y="671.50"></text></g><g><title>pyo3::types::any::PyAny::call1 (15 samples, 20.83%)</title><rect x="51.3889%" y="709" width="20.8333%" height="15" fill="rgb(210,56,17)" fg:x="37" fg:w="15"/><text x="51.6389%" y="719.50">pyo3::types::any::PyAny::call1</text></g><g><title>pyo3::types::any::PyAny::call (15 samples, 20.83%)</title><rect x="51.3889%" y="693" width="20.8333%" height="15" fill="rgb(224,130,29)" fg:x="37" fg:w="15"/><text x="51.6389%" y="703.50">pyo3::types::any::PyAny::call</text></g><g><title>pyo3::types::tuple::&lt;impl pyo3::conversion::IntoPy&lt;pyo3::instance::Py&lt;pyo3::types::tuple::PyTuple&gt;&gt; for (T0,T1)&gt;::into_py (3 samples, 4.17%)</title><rect x="68.0556%" y="677" width="4.1667%" height="15" fill="rgb(235,212,8)" fg:x="49" fg:w="3"/><text x="68.3056%" y="687.50">pyo3:..</text></g><g><title>pyo3::types::floatob::&lt;impl pyo3::conversion::IntoPy&lt;pyo3::instance::Py&lt;pyo3::types::any::PyAny&gt;&gt; for f32&gt;::into_py (2 samples, 2.78%)</title><rect x="69.4444%" y="661" width="2.7778%" height="15" fill="rgb(223,33,50)" fg:x="50" fg:w="2"/><text x="69.6944%" y="671.50">py..</text></g><g><title>pyo3::types::floatob::PyFloat::new (2 samples, 2.78%)</title><rect x="69.4444%" y="645" width="2.7778%" height="15" fill="rgb(219,149,13)" fg:x="50" fg:w="2"/><text x="69.6944%" y="655.50">py..</text></g><g><title>PyFloat_FromDouble (2 samples, 2.78%)</title><rect x="69.4444%" y="629" width="2.7778%" height="15" fill="rgb(250,156,29)" fg:x="50" fg:w="2"/><text x="69.6944%" y="639.50">Py..</text></g><g><title>PyObject_Malloc (2 samples, 2.78%)</title><rect x="69.4444%" y="613" width="2.7778%" height="15" fill="rgb(216,193,19)" fg:x="50" fg:w="2"/><text x="69.6944%" y="623.50">Py..</text></g><g><title>&lt;&amp;T as pyo3::conversion::ToPyObject&gt;::to_object (4 samples, 5.56%)</title><rect x="72.2222%" y="677" width="5.5556%" height="15" fill="rgb(216,135,14)" fg:x="52" fg:w="4"/><text x="72.4722%" y="687.50">&lt;&amp;T as ..</text></g><g><title>pyo3::types::string::&lt;impl pyo3::conversion::ToPyObject for str&gt;::to_object (4 samples, 5.56%)</title><rect x="72.2222%" y="661" width="5.5556%" height="15" fill="rgb(241,47,5)" fg:x="52" fg:w="4"/><text x="72.4722%" y="671.50">pyo3::t..</text></g><g><title>pyo3::types::string::PyString::new (4 samples, 5.56%)</title><rect x="72.2222%" y="645" width="5.5556%" height="15" fill="rgb(233,42,35)" fg:x="52" fg:w="4"/><text x="72.4722%" y="655.50">pyo3::t..</text></g><g><title>[libpython3.10.so.1.0] (4 samples, 5.56%)</title><rect x="72.2222%" y="629" width="5.5556%" height="15" fill="rgb(231,13,6)" fg:x="52" fg:w="4"/><text x="72.4722%" y="639.50">[libpyt..</text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="77.7778%" y="645" width="1.3889%" height="15" fill="rgb(207,181,40)" fg:x="56" fg:w="1"/><text x="78.0278%" y="655.50"></text></g><g><title>_PyObject_GenericGetAttrWithDict (1 samples, 1.39%)</title><rect x="77.7778%" y="629" width="1.3889%" height="15" fill="rgb(254,173,49)" fg:x="56" fg:w="1"/><text x="78.0278%" y="639.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="77.7778%" y="613" width="1.3889%" height="15" fill="rgb(221,1,38)" fg:x="56" fg:w="1"/><text x="78.0278%" y="623.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="77.7778%" y="597" width="1.3889%" height="15" fill="rgb(206,124,46)" fg:x="56" fg:w="1"/><text x="78.0278%" y="607.50"></text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="84.7222%" y="629" width="1.3889%" height="15" fill="rgb(249,21,11)" fg:x="61" fg:w="1"/><text x="84.9722%" y="639.50"></text></g><g><title>pyo3::types::any::PyAny::getattr (17 samples, 23.61%)</title><rect x="72.2222%" y="709" width="23.6111%" height="15" fill="rgb(222,201,40)" fg:x="52" fg:w="17"/><text x="72.4722%" y="719.50">pyo3::types::any::PyAny::getattr</text></g><g><title>pyo3::conversion::ToBorrowedObject::with_borrowed_ptr (17 samples, 23.61%)</title><rect x="72.2222%" y="693" width="23.6111%" height="15" fill="rgb(235,61,29)" fg:x="52" fg:w="17"/><text x="72.4722%" y="703.50">pyo3::conversion::ToBorrowedObject::wi..</text></g><g><title>pyo3::types::any::PyAny::getattr::{{closure}} (13 samples, 18.06%)</title><rect x="77.7778%" y="677" width="18.0556%" height="15" fill="rgb(219,207,3)" fg:x="56" fg:w="13"/><text x="78.0278%" y="687.50">pyo3::types::any::PyAny::get..</text></g><g><title>PyObject_GetAttr (13 samples, 18.06%)</title><rect x="77.7778%" y="661" width="18.0556%" height="15" fill="rgb(222,56,46)" fg:x="56" fg:w="13"/><text x="78.0278%" y="671.50">PyObject_GetAttr</text></g><g><title>_PyObject_GenericGetAttrWithDict (12 samples, 16.67%)</title><rect x="79.1667%" y="645" width="16.6667%" height="15" fill="rgb(239,76,54)" fg:x="57" fg:w="12"/><text x="79.4167%" y="655.50">_PyObject_GenericGetAttrWi..</text></g><g><title>_PyObject_GC_New (7 samples, 9.72%)</title><rect x="86.1111%" y="629" width="9.7222%" height="15" fill="rgb(231,124,27)" fg:x="62" fg:w="7"/><text x="86.3611%" y="639.50">_PyObject_GC_N..</text></g><g><title>[libpython3.10.so.1.0] (7 samples, 9.72%)</title><rect x="86.1111%" y="613" width="9.7222%" height="15" fill="rgb(249,195,6)" fg:x="62" fg:w="7"/><text x="86.3611%" y="623.50">[libpython3.10..</text></g><g><title>[libpython3.10.so.1.0] (7 samples, 9.72%)</title><rect x="86.1111%" y="597" width="9.7222%" height="15" fill="rgb(237,174,47)" fg:x="62" fg:w="7"/><text x="86.3611%" y="607.50">[libpython3.10..</text></g><g><title>[libpython3.10.so.1.0] (3 samples, 4.17%)</title><rect x="91.6667%" y="581" width="4.1667%" height="15" fill="rgb(206,201,31)" fg:x="66" fg:w="3"/><text x="91.9167%" y="591.50">[libp..</text></g><g><title>[libpython3.10.so.1.0] (2 samples, 2.78%)</title><rect x="93.0556%" y="565" width="2.7778%" height="15" fill="rgb(231,57,52)" fg:x="67" fg:w="2"/><text x="93.3056%" y="575.50">[l..</text></g><g><title>[libpython3.10.so.1.0] (1 samples, 1.39%)</title><rect x="94.4444%" y="549" width="1.3889%" height="15" fill="rgb(248,177,22)" fg:x="68" fg:w="1"/><text x="94.6944%" y="559.50"></text></g><g><title>__libc_start_main (53 samples, 73.61%)</title><rect x="23.6111%" y="789" width="73.6111%" height="15" fill="rgb(215,211,37)" fg:x="17" fg:w="53"/><text x="23.8611%" y="799.50">__libc_start_main</text></g><g><title>main (53 samples, 73.61%)</title><rect x="23.6111%" y="773" width="73.6111%" height="15" fill="rgb(241,128,51)" fg:x="17" fg:w="53"/><text x="23.8611%" y="783.50">main</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (53 samples, 73.61%)</title><rect x="23.6111%" y="757" width="73.6111%" height="15" fill="rgb(227,165,31)" fg:x="17" fg:w="53"/><text x="23.8611%" y="767.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (53 samples, 73.61%)</title><rect x="23.6111%" y="741" width="73.6111%" height="15" fill="rgb(228,167,24)" fg:x="17" fg:w="53"/><text x="23.8611%" y="751.50">core::ops::function::FnOnce::call_once</text></g><g><title>hikari_py::main (53 samples, 73.61%)</title><rect x="23.6111%" y="725" width="73.6111%" height="15" fill="rgb(228,143,12)" fg:x="17" fg:w="53"/><text x="23.8611%" y="735.50">hikari_py::main</text></g><g><title>rand::random (1 samples, 1.39%)</title><rect x="95.8333%" y="709" width="1.3889%" height="15" fill="rgb(249,149,8)" fg:x="69" fg:w="1"/><text x="96.0833%" y="719.50"></text></g><g><title>rand::rng::Rng::gen (1 samples, 1.39%)</title><rect x="95.8333%" y="693" width="1.3889%" height="15" fill="rgb(243,35,44)" fg:x="69" fg:w="1"/><text x="96.0833%" y="703.50"></text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::distribution::Distribution&lt;f32&gt; for rand::distributions::Standard&gt;::sample (1 samples, 1.39%)</title><rect x="95.8333%" y="677" width="1.3889%" height="15" fill="rgb(246,89,9)" fg:x="69" fg:w="1"/><text x="96.0833%" y="687.50"></text></g><g><title>rand::rng::Rng::gen (1 samples, 1.39%)</title><rect x="95.8333%" y="661" width="1.3889%" height="15" fill="rgb(233,213,13)" fg:x="69" fg:w="1"/><text x="96.0833%" y="671.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (1 samples, 1.39%)</title><rect x="95.8333%" y="645" width="1.3889%" height="15" fill="rgb(233,141,41)" fg:x="69" fg:w="1"/><text x="96.0833%" y="655.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (1 samples, 1.39%)</title><rect x="95.8333%" y="629" width="1.3889%" height="15" fill="rgb(239,167,4)" fg:x="69" fg:w="1"/><text x="96.0833%" y="639.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (1 samples, 1.39%)</title><rect x="95.8333%" y="613" width="1.3889%" height="15" fill="rgb(209,217,16)" fg:x="69" fg:w="1"/><text x="96.0833%" y="623.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (1 samples, 1.39%)</title><rect x="95.8333%" y="597" width="1.3889%" height="15" fill="rgb(219,88,35)" fg:x="69" fg:w="1"/><text x="96.0833%" y="607.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 1.39%)</title><rect x="95.8333%" y="581" width="1.3889%" height="15" fill="rgb(220,193,23)" fg:x="69" fg:w="1"/><text x="96.0833%" y="591.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 1.39%)</title><rect x="95.8333%" y="565" width="1.3889%" height="15" fill="rgb(230,90,52)" fg:x="69" fg:w="1"/><text x="96.0833%" y="575.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 1.39%)</title><rect x="95.8333%" y="549" width="1.3889%" height="15" fill="rgb(252,106,19)" fg:x="69" fg:w="1"/><text x="96.0833%" y="559.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 1.39%)</title><rect x="95.8333%" y="533" width="1.3889%" height="15" fill="rgb(206,74,20)" fg:x="69" fg:w="1"/><text x="96.0833%" y="543.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (1 samples, 1.39%)</title><rect x="95.8333%" y="517" width="1.3889%" height="15" fill="rgb(230,138,44)" fg:x="69" fg:w="1"/><text x="96.0833%" y="527.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 1.39%)</title><rect x="95.8333%" y="501" width="1.3889%" height="15" fill="rgb(235,182,43)" fg:x="69" fg:w="1"/><text x="96.0833%" y="511.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 1.39%)</title><rect x="95.8333%" y="485" width="1.3889%" height="15" fill="rgb(242,16,51)" fg:x="69" fg:w="1"/><text x="96.0833%" y="495.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 1.39%)</title><rect x="95.8333%" y="469" width="1.3889%" height="15" fill="rgb(248,9,4)" fg:x="69" fg:w="1"/><text x="96.0833%" y="479.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (1 samples, 1.39%)</title><rect x="95.8333%" y="453" width="1.3889%" height="15" fill="rgb(210,31,22)" fg:x="69" fg:w="1"/><text x="96.0833%" y="463.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (1 samples, 1.39%)</title><rect x="95.8333%" y="437" width="1.3889%" height="15" fill="rgb(239,54,39)" fg:x="69" fg:w="1"/><text x="96.0833%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 1.39%)</title><rect x="95.8333%" y="421" width="1.3889%" height="15" fill="rgb(230,99,41)" fg:x="69" fg:w="1"/><text x="96.0833%" y="431.50"></text></g><g><title>_start (59 samples, 81.94%)</title><rect x="16.6667%" y="805" width="81.9444%" height="15" fill="rgb(253,106,12)" fg:x="12" fg:w="59"/><text x="16.9167%" y="815.50">_start</text></g><g><title>_dl_start (1 samples, 1.39%)</title><rect x="97.2222%" y="789" width="1.3889%" height="15" fill="rgb(213,46,41)" fg:x="70" fg:w="1"/><text x="97.4722%" y="799.50"></text></g><g><title>_dl_sysdep_start (1 samples, 1.39%)</title><rect x="97.2222%" y="773" width="1.3889%" height="15" fill="rgb(215,133,35)" fg:x="70" fg:w="1"/><text x="97.4722%" y="783.50"></text></g><g><title>dl_main (1 samples, 1.39%)</title><rect x="97.2222%" y="757" width="1.3889%" height="15" fill="rgb(213,28,5)" fg:x="70" fg:w="1"/><text x="97.4722%" y="767.50"></text></g><g><title>all (72 samples, 100%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(215,77,49)" fg:x="0" fg:w="72"/><text x="0.2500%" y="847.50"></text></g><g><title>hikari_py (72 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(248,100,22)" fg:x="0" fg:w="72"/><text x="0.2500%" y="831.50">hikari_py</text></g><g><title>pyo3::gil::ReferencePool::update_counts (1 samples, 1.39%)</title><rect x="98.6111%" y="805" width="1.3889%" height="15" fill="rgb(208,67,9)" fg:x="71" fg:w="1"/><text x="98.8611%" y="815.50"></text></g></svg></svg>